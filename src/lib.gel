define sum(from,to,func) {
	r = 0;
	while (from<=to) do (r = r + *func(from); from=from+1);
	r
}
define prod(from,to,func) {
	r = 1;
	while (from<=to) do (r = r * *func(from); from=from+1);
	r
}
define nPr(n,r) {
	if(not is_integer(n) or not is_integer(r)) then
		(error("nPr: argument not an integer");bailout)
	else if(r<0 or n<0 or r>n) then
		0
	else
		(n!)/((n-r)!)
}
define nCr(n,r) {
	if(not is_integer(n) or not is_integer(r)) then
		(error("nCr: argument not an integer");bailout)
	else if(r<0 or n<0 or r>n) then
		0
	else
		(n!)/(r!*(n-r)!)
}
define fib(x) {
	if(not is_integer(x)) then
		(error("fib: argument not an integer");bailout)
	else if(x<0) then
		(error("fib: argument less then zero");bailout)
	else if(x==0) then 0
	else if(x==1) then 1
	else (
		i=0;
		c=1;
		p=0;
		x=x-2;
		while(x>=i) do (
			c=c+p;
			p=c-p;
			i=i+1
		);
		c
	)
}
