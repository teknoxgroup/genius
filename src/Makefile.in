# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AR = @AR@
AS = @AS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXTRA_WARNING_CFLAGS = @EXTRA_WARNING_CFLAGS@
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GCONFTOOL = @GCONFTOOL@
GCONF_CONFIG_SOURCE = @GCONF_CONFIG_SOURCE@
GENCAT = @GENCAT@
GENIUS_CFLAGS = @GENIUS_CFLAGS@
GENIUS_LIBS = @GENIUS_LIBS@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GMOFILES = @GMOFILES@
GMP_LIB = @GMP_LIB@
GMSGFMT = @GMSGFMT@
GT_NO = @GT_NO@
GT_YES = @GT_YES@
GUI_CFLAGS = @GUI_CFLAGS@
GUI_LIBS = @GUI_LIBS@
INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@
INSTALL_GCONF_CONFIG_SOURCE = @INSTALL_GCONF_CONFIG_SOURCE@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XAM_RULE = @INTLTOOL_XAM_RULE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
MPFR_LIB = @MPFR_LIB@
MSGFMT = @MSGFMT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POPT_LIBS = @POPT_LIBS@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
RC = @RC@
READLINE_LIB = @READLINE_LIB@
STRIP = @STRIP@
TERMCAP_LIB = @TERMCAP_LIB@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
YACC = @YACC@
l = @l@

Librarydir = $(datadir)/genius/gel
Plugindescdir = $(datadir)/genius/plugins
Langdescdir = $(datadir)/genius/gtksourceview/

plugindir = $(libdir)/genius

plugin_includedir = $(includedir)/genius

#YACCFLAGS += -d -t
YFLAGS =  -d -t

INCLUDES =          -DGNOMELOCALEDIR=\""$(prefix)/$(DATADIRNAME)/locale"\"		-DG_LOG_DOMAIN=\"Genius\"					-DDATADIR=\""$(datadir)"\"					-DLIBEXECDIR=\""$(libexecdir)"\"				-DICONDIR=\""$(datadir)/pixmaps/genius"\"			-DLIBRARY_DIR=\""$(datadir)/genius/"\"				-I$(srcdir)							-I$(includedir)							-I$(top_srcdir)							-I$(top_srcdir)/vicious-extensions				-I$(top_builddir)						-I$(top_builddir)/vicious-extensions				$(GMP_INCLUDEDIR)						$(GENIUS_CFLAGS)						$(EXTRA_WARNING_CFLAGS)


bin_PROGRAMS = gnome-genius genius

libexec_PROGRAMS = genius-readline-helper-fifo

gnome_genius_SOURCES =  	calc.c			calc.h			eval.c			eval.h			gnome-genius.c		util.c			util.h			dict.c			dict.h			funclib.c		funclib.h		mpwrap.c		mpwrap.h		mpzextra.c		mpzextra.h		matrix.c		matrix.h		matrixw.c		matrixw.h		matop.c			matop.h			compil.c		compil.h		structs.h		lexer.l			lexer.h			parseutil.h		parseutil.c		inter.c			inter.h			plugin.c		plugin.h		plugread.c		plugread.h		plug_api.h		parse.h			parse.y		 	genius_lists.c	 	utype.c			utype.h			extra.h			geloutput.c		geloutput.h		graphing.h		graphing.c


gnome_genius_LDADD =  	-L$(top_builddir)/vicious-extensions		-lviciousui					-lm						@GMP_LIB@					@MPFR_LIB@					@LEXLIB@					$(GENIUS_LIBS)					@READLINE_LIB@					@TERMCAP_LIB@


genius_readline_helper_fifo_SOURCES =   	genius_lists.c				genius-readline-helper.c


# FIXME: no need for so many libs
genius_readline_helper_fifo_LDADD =  	-L$(top_builddir)/vicious-extensions		-lvicious					-lm						$(GENIUS_LIBS)					@READLINE_LIB@					@TERMCAP_LIB@


genius_SOURCES =  	calc.c			calc.h			eval.c			eval.h			genius.c		util.c			util.h			dict.c			dict.h			funclib.c		funclib.h		mpwrap.c		mpwrap.h		mpzextra.c		mpzextra.h		matrix.c		matrix.h		matrixw.c		matrixw.h		matop.c			matop.h			compil.c		compil.h		structs.h		parseutil.h		parseutil.c		inter.c			inter.h			lexer.l			lexer.h			plugin.c		plugin.h		plugread.c		plugread.h		plug_api.h		parse.h			parse.y		 	genius_lists.c	 	utype.c			utype.h			extra.h			geloutput.c		geloutput.h


genius_LDADD =  	-L$(top_builddir)/vicious-extensions		-lvicious					-lm						@GMP_LIB@					@MPFR_LIB@					@LEXLIB@					$(GENIUS_LIBS)					@READLINE_LIB@					@TERMCAP_LIB@


plugin_include_HEADERS =  	plug_api.h		geloutput.h		mpwrap.h		mpzextra.h		structs.h		matrix.h		matrixw.h		matop.h			compil.h		utype.h			dict.h			lexer.h			eval.h


plugin_LTLIBRARIES = libtestplugin.la

libtestplugin_la_SOURCES =  	plug_api.h			testplugin.c


BUILT_SOURCES = parse.h parse.c lexer.c

CLEANFILES =  $(BUILT_SOURCES)

Desktopdir = $(datadir)/applications
Desktop_in_files =  	gnome-genius.desktop.in	

Desktop_DATA = $(Desktop_in_files:.desktop.in=.desktop)

EXTRA_DIST =  	geniustest.pl 	geniustests.txt 	$(Desktop_in_files) 	$(Desktop_DATA) 	test.plugin.in 	genius.lang


Plugindesc_DATA = test.plugin

Langdesc_DATA = genius.lang
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(plugin_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
LIBS = @LIBS@
libtestplugin_la_LDFLAGS = 
libtestplugin_la_LIBADD = 
libtestplugin_la_OBJECTS =  testplugin.lo
bin_PROGRAMS =  gnome-genius$(EXEEXT) genius$(EXEEXT)
libexec_PROGRAMS =  genius-readline-helper-fifo$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS) $(libexec_PROGRAMS)

gnome_genius_OBJECTS =  calc.$(OBJEXT) eval.$(OBJEXT) \
gnome-genius.$(OBJEXT) util.$(OBJEXT) dict.$(OBJEXT) funclib.$(OBJEXT) \
mpwrap.$(OBJEXT) mpzextra.$(OBJEXT) matrix.$(OBJEXT) matrixw.$(OBJEXT) \
matop.$(OBJEXT) compil.$(OBJEXT) lexer.$(OBJEXT) parseutil.$(OBJEXT) \
inter.$(OBJEXT) plugin.$(OBJEXT) plugread.$(OBJEXT) parse.$(OBJEXT) \
genius_lists.$(OBJEXT) utype.$(OBJEXT) geloutput.$(OBJEXT) \
graphing.$(OBJEXT)
gnome_genius_DEPENDENCIES = 
gnome_genius_LDFLAGS = 
genius_OBJECTS =  calc.$(OBJEXT) eval.$(OBJEXT) genius.$(OBJEXT) \
util.$(OBJEXT) dict.$(OBJEXT) funclib.$(OBJEXT) mpwrap.$(OBJEXT) \
mpzextra.$(OBJEXT) matrix.$(OBJEXT) matrixw.$(OBJEXT) matop.$(OBJEXT) \
compil.$(OBJEXT) parseutil.$(OBJEXT) inter.$(OBJEXT) lexer.$(OBJEXT) \
plugin.$(OBJEXT) plugread.$(OBJEXT) parse.$(OBJEXT) \
genius_lists.$(OBJEXT) utype.$(OBJEXT) geloutput.$(OBJEXT)
genius_DEPENDENCIES = 
genius_LDFLAGS = 
genius_readline_helper_fifo_OBJECTS =  genius_lists.$(OBJEXT) \
genius-readline-helper.$(OBJEXT)
genius_readline_helper_fifo_DEPENDENCIES = 
genius_readline_helper_fifo_LDFLAGS = 
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LEXLIB = @LEXLIB@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(Desktop_DATA) $(Langdesc_DATA) $(Plugindesc_DATA)

HEADERS =  $(plugin_include_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in lexer.c parse.c


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libtestplugin_la_SOURCES) $(gnome_genius_SOURCES) $(genius_SOURCES) $(genius_readline_helper_fifo_SOURCES)
OBJECTS = $(libtestplugin_la_OBJECTS) $(gnome_genius_OBJECTS) $(genius_OBJECTS) $(genius_readline_helper_fifo_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .l .lo .o .obj .s .y
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps src/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-pluginLTLIBRARIES:

clean-pluginLTLIBRARIES:
	-test -z "$(plugin_LTLIBRARIES)" || rm -f $(plugin_LTLIBRARIES)

distclean-pluginLTLIBRARIES:

maintainer-clean-pluginLTLIBRARIES:

install-pluginLTLIBRARIES: $(plugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(plugindir)
	@list='$(plugin_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(plugindir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(plugindir)/$$p; \
	  else :; fi; \
	done

uninstall-pluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(plugin_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(plugindir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libtestplugin.la: $(libtestplugin_la_OBJECTS) $(libtestplugin_la_DEPENDENCIES)
	$(LINK) -rpath $(plugindir) $(libtestplugin_la_LDFLAGS) $(libtestplugin_la_OBJECTS) $(libtestplugin_la_LIBADD) $(LIBS)

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

mostlyclean-libexecPROGRAMS:

clean-libexecPROGRAMS:
	-test -z "$(libexec_PROGRAMS)" || rm -f $(libexec_PROGRAMS)

distclean-libexecPROGRAMS:

maintainer-clean-libexecPROGRAMS:

install-libexecPROGRAMS: $(libexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libexecdir)
	@list='$(libexec_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(libexecdir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(libexecdir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-libexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(libexec_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libexecdir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

gnome-genius$(EXEEXT): $(gnome_genius_OBJECTS) $(gnome_genius_DEPENDENCIES)
	@rm -f gnome-genius$(EXEEXT)
	$(LINK) $(gnome_genius_LDFLAGS) $(gnome_genius_OBJECTS) $(gnome_genius_LDADD) $(LIBS)

genius$(EXEEXT): $(genius_OBJECTS) $(genius_DEPENDENCIES)
	@rm -f genius$(EXEEXT)
	$(LINK) $(genius_LDFLAGS) $(genius_OBJECTS) $(genius_LDADD) $(LIBS)

genius-readline-helper-fifo$(EXEEXT): $(genius_readline_helper_fifo_OBJECTS) $(genius_readline_helper_fifo_DEPENDENCIES)
	@rm -f genius-readline-helper-fifo$(EXEEXT)
	$(LINK) $(genius_readline_helper_fifo_LDFLAGS) $(genius_readline_helper_fifo_OBJECTS) $(genius_readline_helper_fifo_LDADD) $(LIBS)
.l.c:
	$(LEX) $(AM_LFLAGS) $(LFLAGS) $< && mv $(LEX_OUTPUT_ROOT).c $@
.y.c:
	$(YACC) $(AM_YFLAGS) $(YFLAGS) $< && mv y.tab.c $*.c
	if test -f y.tab.h; then \
	if cmp -s y.tab.h $*.h; then rm -f y.tab.h; else mv y.tab.h $*.h; fi; \
	else :; fi
parse.h: parse.c


install-DesktopDATA: $(Desktop_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(Desktopdir)
	@list='$(Desktop_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(Desktopdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(Desktopdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(Desktopdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(Desktopdir)/$$p; \
	  fi; fi; \
	done

uninstall-DesktopDATA:
	@$(NORMAL_UNINSTALL)
	list='$(Desktop_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(Desktopdir)/$$p; \
	done

install-LangdescDATA: $(Langdesc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(Langdescdir)
	@list='$(Langdesc_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(Langdescdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(Langdescdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(Langdescdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(Langdescdir)/$$p; \
	  fi; fi; \
	done

uninstall-LangdescDATA:
	@$(NORMAL_UNINSTALL)
	list='$(Langdesc_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(Langdescdir)/$$p; \
	done

install-PlugindescDATA: $(Plugindesc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(Plugindescdir)
	@list='$(Plugindesc_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(Plugindescdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(Plugindescdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(Plugindescdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(Plugindescdir)/$$p; \
	  fi; fi; \
	done

uninstall-PlugindescDATA:
	@$(NORMAL_UNINSTALL)
	list='$(Plugindesc_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(Plugindescdir)/$$p; \
	done

install-plugin_includeHEADERS: $(plugin_include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(plugin_includedir)
	@list='$(plugin_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(plugin_includedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(plugin_includedir)/$$p; \
	done

uninstall-plugin_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(plugin_include_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(plugin_includedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
calc.o: calc.c ../config.h calc.h structs.h mpwrap.h eval.h util.h \
	dict.h funclib.h matrixw.h matrix.h compil.h plugin.h \
	geloutput.h lexer.h parse.h
compil.o: compil.c ../config.h mpwrap.h eval.h structs.h calc.h dict.h \
	util.h matrix.h matrixw.h compil.h
dict.o: dict.c ../config.h eval.h mpwrap.h structs.h dict.h util.h \
	funclib.h compil.h
eval.o: eval.c ../config.h mpwrap.h eval.h structs.h calc.h dict.h \
	util.h matrix.h matrixw.h matop.h compil.h utype.h
funclib.o: funclib.c ../config.h mpwrap.h mpzextra.h eval.h structs.h \
	dict.h funclib.h calc.h matrix.h matrixw.h matop.h geloutput.h
geloutput.o: geloutput.c ../config.h structs.h mpwrap.h geloutput.h
genius-readline-helper.o: genius-readline-helper.c
genius.o: genius.c ../config.h calc.h structs.h mpwrap.h eval.h util.h \
	dict.h inter.h geloutput.h lexer.h plugin.h
genius_lists.o: genius_lists.c
gnome-genius.o: gnome-genius.c ../config.h calc.h structs.h mpwrap.h \
	util.h dict.h eval.h lexer.h geloutput.h graphing.h plugin.h \
	inter.h
graphing.o: graphing.c ../config.h calc.h structs.h mpwrap.h eval.h \
	util.h dict.h funclib.h matrixw.h matrix.h compil.h plugin.h \
	geloutput.h graphing.h
inter.o: inter.c ../config.h dict.h structs.h mpwrap.h calc.h plugin.h \
	inter.h
lexer.o: lexer.c ../config.h mpwrap.h eval.h structs.h dict.h calc.h \
	parse.h util.h
matop.o: matop.c ../config.h mpwrap.h eval.h structs.h calc.h dict.h \
	util.h funclib.h matrix.h matrixw.h matop.h
matrix.o: matrix.c ../config.h matrix.h
matrixw.o: matrixw.c ../config.h structs.h mpwrap.h eval.h matrix.h \
	matrixw.h
mpwrap.o: mpwrap.c ../config.h calc.h structs.h mpwrap.h util.h
mpzextra.o: mpzextra.c ../config.h calc.h structs.h mpwrap.h mpzextra.h
parse.o: parse.c ../config.h structs.h mpwrap.h eval.h dict.h util.h \
	calc.h matrix.h matrixw.h parseutil.h extra.h
parseutil.o: parseutil.c ../config.h structs.h mpwrap.h eval.h dict.h \
	util.h calc.h matrix.h matrixw.h parseutil.h extra.h
plugin.o: plugin.c ../config.h ../vicious-extensions/vicious.h \
	../vicious-extensions/ve-misc.h \
	../vicious-extensions/ve-config.h \
	../vicious-extensions/ve-signal.h calc.h structs.h mpwrap.h \
	eval.h util.h dict.h funclib.h matrixw.h matrix.h compil.h \
	parse.h plug_api.h plugin.h plugread.h
plugread.o: plugread.c ../config.h ../vicious-extensions/vicious.h \
	../vicious-extensions/ve-misc.h \
	../vicious-extensions/ve-config.h \
	../vicious-extensions/ve-signal.h calc.h structs.h mpwrap.h \
	plugin.h plugread.h
plugread_nongnome.o: plugread_nongnome.c ../config.h calc.h structs.h \
	mpwrap.h plugin.h plugread.h
testplugin.lo testplugin.o : testplugin.c ../config.h plug_api.h eval.h \
	mpwrap.h structs.h calc.h dict.h geloutput.h
util.o: util.c ../config.h util.h
utype.o: utype.c ../config.h mpwrap.h eval.h structs.h calc.h dict.h \
	util.h funclib.h matrix.h matrixw.h matop.h compil.h utype.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS install-libexecPROGRAMS
install-exec: install-exec-am

install-data-am: install-pluginLTLIBRARIES install-DesktopDATA \
		install-LangdescDATA install-PlugindescDATA \
		install-plugin_includeHEADERS
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-pluginLTLIBRARIES uninstall-binPROGRAMS \
		uninstall-libexecPROGRAMS uninstall-DesktopDATA \
		uninstall-LangdescDATA uninstall-PlugindescDATA \
		uninstall-plugin_includeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(plugindir) $(DESTDIR)$(bindir) \
		$(DESTDIR)$(libexecdir) $(DESTDIR)$(Desktopdir) \
		$(DESTDIR)$(Langdescdir) $(DESTDIR)$(Plugindescdir) \
		$(DESTDIR)$(plugin_includedir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "lexercparsehparsec$(BUILT_SOURCES)" || rm -f lexerc parseh parsec $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-pluginLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-binPROGRAMS \
		mostlyclean-libexecPROGRAMS mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-pluginLTLIBRARIES clean-compile clean-libtool \
		clean-binPROGRAMS clean-libexecPROGRAMS clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-pluginLTLIBRARIES distclean-compile \
		distclean-libtool distclean-binPROGRAMS \
		distclean-libexecPROGRAMS distclean-tags \
		distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-pluginLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-binPROGRAMS \
		maintainer-clean-libexecPROGRAMS maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-pluginLTLIBRARIES distclean-pluginLTLIBRARIES \
clean-pluginLTLIBRARIES maintainer-clean-pluginLTLIBRARIES \
uninstall-pluginLTLIBRARIES install-pluginLTLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool mostlyclean-binPROGRAMS \
distclean-binPROGRAMS clean-binPROGRAMS maintainer-clean-binPROGRAMS \
uninstall-binPROGRAMS install-binPROGRAMS mostlyclean-libexecPROGRAMS \
distclean-libexecPROGRAMS clean-libexecPROGRAMS \
maintainer-clean-libexecPROGRAMS uninstall-libexecPROGRAMS \
install-libexecPROGRAMS uninstall-DesktopDATA install-DesktopDATA \
uninstall-LangdescDATA install-LangdescDATA uninstall-PlugindescDATA \
install-PlugindescDATA uninstall-plugin_includeHEADERS \
install-plugin_includeHEADERS tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


@INTLTOOL_DESKTOP_RULE@

parse.h: parse.y
	$(YACC) $(YFLAGS) $<
	test -f y.tab.c && mv -f y.tab.c parse.c
	test -f y.tab.h && mv -f y.tab.h parse.h

test.plugin: test.plugin.in Makefile
	sed -e 's,\@libdir\@,$(libdir),g' < $(srcdir)/test.plugin.in \
	  > test.plugin.tmp && mv -f test.plugin.tmp test.plugin

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
