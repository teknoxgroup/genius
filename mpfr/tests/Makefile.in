# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AWK = @AWK@
CC = @CC@
CFLAGS = @CFLAGS@
HAVE_LIB = @HAVE_LIB@
LDFLAGS = @LDFLAGS@
LIB = @LIB@
LTLIB = @LTLIB@
MAKEINFO = @MAKEINFO@
MPFR_LIBM = @MPFR_LIBM@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
TESTS_ASM_OBJECTS = @TESTS_ASM_OBJECTS@
VERSION = @VERSION@

AUTOMAKE_OPTIONS = gnu

check_PROGRAMS = tversion tinits tsgn tcheck tisnan texceptions tset_exp tset tabs tset_d tset_f tset_q tset_si tset_str tset_z tset_ld tset_sj tswap tcopysign tcmp tcmp2 tcmpabs tcmp_d tcmp_ld tcomparisons teq tadd tsub tmul tdiv tsub1sp tadd1sp tadd_ui tsub_ui tcmp_ui tdiv_ui tmul_ui tsqrt_ui tui_div tui_sub tgmpop tsi_op tmul_2exp tfma tsum tdim tminmax tnext tfits tget_d tget_d_2exp tget_z tget_str tget_sj tout_str tinp_str toutimpl tcan_round tround_prec tsqrt tconst_log2 tconst_pi tconst_euler trandom ttrunc trint tfrac texp texp2 texpm1 tlog tlog2 tlog10 tlog1p tpow tui_pow tpow3 tcosh tsinh ttanh tacosh tasinh tatanh thyperbolic tasin tacos tcos tatan tsin ttan tsin_cos tagm thypot tfactorial tgamma terf tcbrt tzeta mpf_compat mpfr_compat reuse tsqr tstrtofr

EXTRA_DIST = tgeneric.c mpf_compat.h inp_str.data

LDADD = libfrtests.a $(MPFR_LIBM) $(top_builddir)/libmpfr.a
INCLUDES = -I$(top_srcdir) @INCLUDES@

check_LIBRARIES = libfrtests.a
libfrtests_a_SOURCES = memory.c rnd_mode.c tests.c cmp_str.c
EXTRA_libfrtests_a_SOURCES = amd64.asm x86.asm
libfrtests_a_DEPENDENCIES = $(TESTS_ASM_OBJECTS)
libfrtests_a_LIBADD = $(libfrtests_a_DEPENDENCIES)

TESTS = $(check_PROGRAMS)

# This $(srcdir) and $(CYGPATH_W) stuff follows automake 1.7.2
SUFFIXES = .asm
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 

DEFS = @DEFS@ -I. -I$(srcdir) 
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
libfrtests_a_OBJECTS =  memory.$(OBJEXT) rnd_mode.$(OBJEXT) \
tests.$(OBJEXT) cmp_str.$(OBJEXT)
AR = ar
tversion_SOURCES = tversion.c
tversion_OBJECTS =  tversion.$(OBJEXT)
tversion_LDADD = $(LDADD)
tversion_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tversion_LDFLAGS = 
tinits_SOURCES = tinits.c
tinits_OBJECTS =  tinits.$(OBJEXT)
tinits_LDADD = $(LDADD)
tinits_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tinits_LDFLAGS = 
tsgn_SOURCES = tsgn.c
tsgn_OBJECTS =  tsgn.$(OBJEXT)
tsgn_LDADD = $(LDADD)
tsgn_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsgn_LDFLAGS = 
tcheck_SOURCES = tcheck.c
tcheck_OBJECTS =  tcheck.$(OBJEXT)
tcheck_LDADD = $(LDADD)
tcheck_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcheck_LDFLAGS = 
tisnan_SOURCES = tisnan.c
tisnan_OBJECTS =  tisnan.$(OBJEXT)
tisnan_LDADD = $(LDADD)
tisnan_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tisnan_LDFLAGS = 
texceptions_SOURCES = texceptions.c
texceptions_OBJECTS =  texceptions.$(OBJEXT)
texceptions_LDADD = $(LDADD)
texceptions_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
texceptions_LDFLAGS = 
tset_exp_SOURCES = tset_exp.c
tset_exp_OBJECTS =  tset_exp.$(OBJEXT)
tset_exp_LDADD = $(LDADD)
tset_exp_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tset_exp_LDFLAGS = 
tset_SOURCES = tset.c
tset_OBJECTS =  tset.$(OBJEXT)
tset_LDADD = $(LDADD)
tset_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tset_LDFLAGS = 
tabs_SOURCES = tabs.c
tabs_OBJECTS =  tabs.$(OBJEXT)
tabs_LDADD = $(LDADD)
tabs_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tabs_LDFLAGS = 
tset_d_SOURCES = tset_d.c
tset_d_OBJECTS =  tset_d.$(OBJEXT)
tset_d_LDADD = $(LDADD)
tset_d_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tset_d_LDFLAGS = 
tset_f_SOURCES = tset_f.c
tset_f_OBJECTS =  tset_f.$(OBJEXT)
tset_f_LDADD = $(LDADD)
tset_f_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tset_f_LDFLAGS = 
tset_q_SOURCES = tset_q.c
tset_q_OBJECTS =  tset_q.$(OBJEXT)
tset_q_LDADD = $(LDADD)
tset_q_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tset_q_LDFLAGS = 
tset_si_SOURCES = tset_si.c
tset_si_OBJECTS =  tset_si.$(OBJEXT)
tset_si_LDADD = $(LDADD)
tset_si_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tset_si_LDFLAGS = 
tset_str_SOURCES = tset_str.c
tset_str_OBJECTS =  tset_str.$(OBJEXT)
tset_str_LDADD = $(LDADD)
tset_str_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tset_str_LDFLAGS = 
tset_z_SOURCES = tset_z.c
tset_z_OBJECTS =  tset_z.$(OBJEXT)
tset_z_LDADD = $(LDADD)
tset_z_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tset_z_LDFLAGS = 
tset_ld_SOURCES = tset_ld.c
tset_ld_OBJECTS =  tset_ld.$(OBJEXT)
tset_ld_LDADD = $(LDADD)
tset_ld_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tset_ld_LDFLAGS = 
tset_sj_SOURCES = tset_sj.c
tset_sj_OBJECTS =  tset_sj.$(OBJEXT)
tset_sj_LDADD = $(LDADD)
tset_sj_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tset_sj_LDFLAGS = 
tswap_SOURCES = tswap.c
tswap_OBJECTS =  tswap.$(OBJEXT)
tswap_LDADD = $(LDADD)
tswap_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tswap_LDFLAGS = 
tcopysign_SOURCES = tcopysign.c
tcopysign_OBJECTS =  tcopysign.$(OBJEXT)
tcopysign_LDADD = $(LDADD)
tcopysign_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcopysign_LDFLAGS = 
tcmp_SOURCES = tcmp.c
tcmp_OBJECTS =  tcmp.$(OBJEXT)
tcmp_LDADD = $(LDADD)
tcmp_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcmp_LDFLAGS = 
tcmp2_SOURCES = tcmp2.c
tcmp2_OBJECTS =  tcmp2.$(OBJEXT)
tcmp2_LDADD = $(LDADD)
tcmp2_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcmp2_LDFLAGS = 
tcmpabs_SOURCES = tcmpabs.c
tcmpabs_OBJECTS =  tcmpabs.$(OBJEXT)
tcmpabs_LDADD = $(LDADD)
tcmpabs_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcmpabs_LDFLAGS = 
tcmp_d_SOURCES = tcmp_d.c
tcmp_d_OBJECTS =  tcmp_d.$(OBJEXT)
tcmp_d_LDADD = $(LDADD)
tcmp_d_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcmp_d_LDFLAGS = 
tcmp_ld_SOURCES = tcmp_ld.c
tcmp_ld_OBJECTS =  tcmp_ld.$(OBJEXT)
tcmp_ld_LDADD = $(LDADD)
tcmp_ld_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcmp_ld_LDFLAGS = 
tcomparisons_SOURCES = tcomparisons.c
tcomparisons_OBJECTS =  tcomparisons.$(OBJEXT)
tcomparisons_LDADD = $(LDADD)
tcomparisons_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcomparisons_LDFLAGS = 
teq_SOURCES = teq.c
teq_OBJECTS =  teq.$(OBJEXT)
teq_LDADD = $(LDADD)
teq_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
teq_LDFLAGS = 
tadd_SOURCES = tadd.c
tadd_OBJECTS =  tadd.$(OBJEXT)
tadd_LDADD = $(LDADD)
tadd_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tadd_LDFLAGS = 
tsub_SOURCES = tsub.c
tsub_OBJECTS =  tsub.$(OBJEXT)
tsub_LDADD = $(LDADD)
tsub_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsub_LDFLAGS = 
tmul_SOURCES = tmul.c
tmul_OBJECTS =  tmul.$(OBJEXT)
tmul_LDADD = $(LDADD)
tmul_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tmul_LDFLAGS = 
tdiv_SOURCES = tdiv.c
tdiv_OBJECTS =  tdiv.$(OBJEXT)
tdiv_LDADD = $(LDADD)
tdiv_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tdiv_LDFLAGS = 
tsub1sp_SOURCES = tsub1sp.c
tsub1sp_OBJECTS =  tsub1sp.$(OBJEXT)
tsub1sp_LDADD = $(LDADD)
tsub1sp_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsub1sp_LDFLAGS = 
tadd1sp_SOURCES = tadd1sp.c
tadd1sp_OBJECTS =  tadd1sp.$(OBJEXT)
tadd1sp_LDADD = $(LDADD)
tadd1sp_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tadd1sp_LDFLAGS = 
tadd_ui_SOURCES = tadd_ui.c
tadd_ui_OBJECTS =  tadd_ui.$(OBJEXT)
tadd_ui_LDADD = $(LDADD)
tadd_ui_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tadd_ui_LDFLAGS = 
tsub_ui_SOURCES = tsub_ui.c
tsub_ui_OBJECTS =  tsub_ui.$(OBJEXT)
tsub_ui_LDADD = $(LDADD)
tsub_ui_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsub_ui_LDFLAGS = 
tcmp_ui_SOURCES = tcmp_ui.c
tcmp_ui_OBJECTS =  tcmp_ui.$(OBJEXT)
tcmp_ui_LDADD = $(LDADD)
tcmp_ui_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcmp_ui_LDFLAGS = 
tdiv_ui_SOURCES = tdiv_ui.c
tdiv_ui_OBJECTS =  tdiv_ui.$(OBJEXT)
tdiv_ui_LDADD = $(LDADD)
tdiv_ui_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tdiv_ui_LDFLAGS = 
tmul_ui_SOURCES = tmul_ui.c
tmul_ui_OBJECTS =  tmul_ui.$(OBJEXT)
tmul_ui_LDADD = $(LDADD)
tmul_ui_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tmul_ui_LDFLAGS = 
tsqrt_ui_SOURCES = tsqrt_ui.c
tsqrt_ui_OBJECTS =  tsqrt_ui.$(OBJEXT)
tsqrt_ui_LDADD = $(LDADD)
tsqrt_ui_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsqrt_ui_LDFLAGS = 
tui_div_SOURCES = tui_div.c
tui_div_OBJECTS =  tui_div.$(OBJEXT)
tui_div_LDADD = $(LDADD)
tui_div_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tui_div_LDFLAGS = 
tui_sub_SOURCES = tui_sub.c
tui_sub_OBJECTS =  tui_sub.$(OBJEXT)
tui_sub_LDADD = $(LDADD)
tui_sub_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tui_sub_LDFLAGS = 
tgmpop_SOURCES = tgmpop.c
tgmpop_OBJECTS =  tgmpop.$(OBJEXT)
tgmpop_LDADD = $(LDADD)
tgmpop_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tgmpop_LDFLAGS = 
tsi_op_SOURCES = tsi_op.c
tsi_op_OBJECTS =  tsi_op.$(OBJEXT)
tsi_op_LDADD = $(LDADD)
tsi_op_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsi_op_LDFLAGS = 
tmul_2exp_SOURCES = tmul_2exp.c
tmul_2exp_OBJECTS =  tmul_2exp.$(OBJEXT)
tmul_2exp_LDADD = $(LDADD)
tmul_2exp_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tmul_2exp_LDFLAGS = 
tfma_SOURCES = tfma.c
tfma_OBJECTS =  tfma.$(OBJEXT)
tfma_LDADD = $(LDADD)
tfma_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tfma_LDFLAGS = 
tsum_SOURCES = tsum.c
tsum_OBJECTS =  tsum.$(OBJEXT)
tsum_LDADD = $(LDADD)
tsum_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsum_LDFLAGS = 
tdim_SOURCES = tdim.c
tdim_OBJECTS =  tdim.$(OBJEXT)
tdim_LDADD = $(LDADD)
tdim_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tdim_LDFLAGS = 
tminmax_SOURCES = tminmax.c
tminmax_OBJECTS =  tminmax.$(OBJEXT)
tminmax_LDADD = $(LDADD)
tminmax_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tminmax_LDFLAGS = 
tnext_SOURCES = tnext.c
tnext_OBJECTS =  tnext.$(OBJEXT)
tnext_LDADD = $(LDADD)
tnext_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tnext_LDFLAGS = 
tfits_SOURCES = tfits.c
tfits_OBJECTS =  tfits.$(OBJEXT)
tfits_LDADD = $(LDADD)
tfits_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tfits_LDFLAGS = 
tget_d_SOURCES = tget_d.c
tget_d_OBJECTS =  tget_d.$(OBJEXT)
tget_d_LDADD = $(LDADD)
tget_d_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tget_d_LDFLAGS = 
tget_d_2exp_SOURCES = tget_d_2exp.c
tget_d_2exp_OBJECTS =  tget_d_2exp.$(OBJEXT)
tget_d_2exp_LDADD = $(LDADD)
tget_d_2exp_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tget_d_2exp_LDFLAGS = 
tget_z_SOURCES = tget_z.c
tget_z_OBJECTS =  tget_z.$(OBJEXT)
tget_z_LDADD = $(LDADD)
tget_z_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tget_z_LDFLAGS = 
tget_str_SOURCES = tget_str.c
tget_str_OBJECTS =  tget_str.$(OBJEXT)
tget_str_LDADD = $(LDADD)
tget_str_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tget_str_LDFLAGS = 
tget_sj_SOURCES = tget_sj.c
tget_sj_OBJECTS =  tget_sj.$(OBJEXT)
tget_sj_LDADD = $(LDADD)
tget_sj_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tget_sj_LDFLAGS = 
tout_str_SOURCES = tout_str.c
tout_str_OBJECTS =  tout_str.$(OBJEXT)
tout_str_LDADD = $(LDADD)
tout_str_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tout_str_LDFLAGS = 
tinp_str_SOURCES = tinp_str.c
tinp_str_OBJECTS =  tinp_str.$(OBJEXT)
tinp_str_LDADD = $(LDADD)
tinp_str_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tinp_str_LDFLAGS = 
toutimpl_SOURCES = toutimpl.c
toutimpl_OBJECTS =  toutimpl.$(OBJEXT)
toutimpl_LDADD = $(LDADD)
toutimpl_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
toutimpl_LDFLAGS = 
tcan_round_SOURCES = tcan_round.c
tcan_round_OBJECTS =  tcan_round.$(OBJEXT)
tcan_round_LDADD = $(LDADD)
tcan_round_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcan_round_LDFLAGS = 
tround_prec_SOURCES = tround_prec.c
tround_prec_OBJECTS =  tround_prec.$(OBJEXT)
tround_prec_LDADD = $(LDADD)
tround_prec_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tround_prec_LDFLAGS = 
tsqrt_SOURCES = tsqrt.c
tsqrt_OBJECTS =  tsqrt.$(OBJEXT)
tsqrt_LDADD = $(LDADD)
tsqrt_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsqrt_LDFLAGS = 
tconst_log2_SOURCES = tconst_log2.c
tconst_log2_OBJECTS =  tconst_log2.$(OBJEXT)
tconst_log2_LDADD = $(LDADD)
tconst_log2_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tconst_log2_LDFLAGS = 
tconst_pi_SOURCES = tconst_pi.c
tconst_pi_OBJECTS =  tconst_pi.$(OBJEXT)
tconst_pi_LDADD = $(LDADD)
tconst_pi_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tconst_pi_LDFLAGS = 
tconst_euler_SOURCES = tconst_euler.c
tconst_euler_OBJECTS =  tconst_euler.$(OBJEXT)
tconst_euler_LDADD = $(LDADD)
tconst_euler_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tconst_euler_LDFLAGS = 
trandom_SOURCES = trandom.c
trandom_OBJECTS =  trandom.$(OBJEXT)
trandom_LDADD = $(LDADD)
trandom_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
trandom_LDFLAGS = 
ttrunc_SOURCES = ttrunc.c
ttrunc_OBJECTS =  ttrunc.$(OBJEXT)
ttrunc_LDADD = $(LDADD)
ttrunc_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
ttrunc_LDFLAGS = 
trint_SOURCES = trint.c
trint_OBJECTS =  trint.$(OBJEXT)
trint_LDADD = $(LDADD)
trint_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
trint_LDFLAGS = 
tfrac_SOURCES = tfrac.c
tfrac_OBJECTS =  tfrac.$(OBJEXT)
tfrac_LDADD = $(LDADD)
tfrac_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tfrac_LDFLAGS = 
texp_SOURCES = texp.c
texp_OBJECTS =  texp.$(OBJEXT)
texp_LDADD = $(LDADD)
texp_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
texp_LDFLAGS = 
texp2_SOURCES = texp2.c
texp2_OBJECTS =  texp2.$(OBJEXT)
texp2_LDADD = $(LDADD)
texp2_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
texp2_LDFLAGS = 
texpm1_SOURCES = texpm1.c
texpm1_OBJECTS =  texpm1.$(OBJEXT)
texpm1_LDADD = $(LDADD)
texpm1_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
texpm1_LDFLAGS = 
tlog_SOURCES = tlog.c
tlog_OBJECTS =  tlog.$(OBJEXT)
tlog_LDADD = $(LDADD)
tlog_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tlog_LDFLAGS = 
tlog2_SOURCES = tlog2.c
tlog2_OBJECTS =  tlog2.$(OBJEXT)
tlog2_LDADD = $(LDADD)
tlog2_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tlog2_LDFLAGS = 
tlog10_SOURCES = tlog10.c
tlog10_OBJECTS =  tlog10.$(OBJEXT)
tlog10_LDADD = $(LDADD)
tlog10_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tlog10_LDFLAGS = 
tlog1p_SOURCES = tlog1p.c
tlog1p_OBJECTS =  tlog1p.$(OBJEXT)
tlog1p_LDADD = $(LDADD)
tlog1p_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tlog1p_LDFLAGS = 
tpow_SOURCES = tpow.c
tpow_OBJECTS =  tpow.$(OBJEXT)
tpow_LDADD = $(LDADD)
tpow_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tpow_LDFLAGS = 
tui_pow_SOURCES = tui_pow.c
tui_pow_OBJECTS =  tui_pow.$(OBJEXT)
tui_pow_LDADD = $(LDADD)
tui_pow_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tui_pow_LDFLAGS = 
tpow3_SOURCES = tpow3.c
tpow3_OBJECTS =  tpow3.$(OBJEXT)
tpow3_LDADD = $(LDADD)
tpow3_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tpow3_LDFLAGS = 
tcosh_SOURCES = tcosh.c
tcosh_OBJECTS =  tcosh.$(OBJEXT)
tcosh_LDADD = $(LDADD)
tcosh_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcosh_LDFLAGS = 
tsinh_SOURCES = tsinh.c
tsinh_OBJECTS =  tsinh.$(OBJEXT)
tsinh_LDADD = $(LDADD)
tsinh_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsinh_LDFLAGS = 
ttanh_SOURCES = ttanh.c
ttanh_OBJECTS =  ttanh.$(OBJEXT)
ttanh_LDADD = $(LDADD)
ttanh_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
ttanh_LDFLAGS = 
tacosh_SOURCES = tacosh.c
tacosh_OBJECTS =  tacosh.$(OBJEXT)
tacosh_LDADD = $(LDADD)
tacosh_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tacosh_LDFLAGS = 
tasinh_SOURCES = tasinh.c
tasinh_OBJECTS =  tasinh.$(OBJEXT)
tasinh_LDADD = $(LDADD)
tasinh_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tasinh_LDFLAGS = 
tatanh_SOURCES = tatanh.c
tatanh_OBJECTS =  tatanh.$(OBJEXT)
tatanh_LDADD = $(LDADD)
tatanh_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tatanh_LDFLAGS = 
thyperbolic_SOURCES = thyperbolic.c
thyperbolic_OBJECTS =  thyperbolic.$(OBJEXT)
thyperbolic_LDADD = $(LDADD)
thyperbolic_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
thyperbolic_LDFLAGS = 
tasin_SOURCES = tasin.c
tasin_OBJECTS =  tasin.$(OBJEXT)
tasin_LDADD = $(LDADD)
tasin_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tasin_LDFLAGS = 
tacos_SOURCES = tacos.c
tacos_OBJECTS =  tacos.$(OBJEXT)
tacos_LDADD = $(LDADD)
tacos_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tacos_LDFLAGS = 
tcos_SOURCES = tcos.c
tcos_OBJECTS =  tcos.$(OBJEXT)
tcos_LDADD = $(LDADD)
tcos_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcos_LDFLAGS = 
tatan_SOURCES = tatan.c
tatan_OBJECTS =  tatan.$(OBJEXT)
tatan_LDADD = $(LDADD)
tatan_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tatan_LDFLAGS = 
tsin_SOURCES = tsin.c
tsin_OBJECTS =  tsin.$(OBJEXT)
tsin_LDADD = $(LDADD)
tsin_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsin_LDFLAGS = 
ttan_SOURCES = ttan.c
ttan_OBJECTS =  ttan.$(OBJEXT)
ttan_LDADD = $(LDADD)
ttan_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
ttan_LDFLAGS = 
tsin_cos_SOURCES = tsin_cos.c
tsin_cos_OBJECTS =  tsin_cos.$(OBJEXT)
tsin_cos_LDADD = $(LDADD)
tsin_cos_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsin_cos_LDFLAGS = 
tagm_SOURCES = tagm.c
tagm_OBJECTS =  tagm.$(OBJEXT)
tagm_LDADD = $(LDADD)
tagm_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tagm_LDFLAGS = 
thypot_SOURCES = thypot.c
thypot_OBJECTS =  thypot.$(OBJEXT)
thypot_LDADD = $(LDADD)
thypot_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
thypot_LDFLAGS = 
tfactorial_SOURCES = tfactorial.c
tfactorial_OBJECTS =  tfactorial.$(OBJEXT)
tfactorial_LDADD = $(LDADD)
tfactorial_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tfactorial_LDFLAGS = 
tgamma_SOURCES = tgamma.c
tgamma_OBJECTS =  tgamma.$(OBJEXT)
tgamma_LDADD = $(LDADD)
tgamma_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tgamma_LDFLAGS = 
terf_SOURCES = terf.c
terf_OBJECTS =  terf.$(OBJEXT)
terf_LDADD = $(LDADD)
terf_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
terf_LDFLAGS = 
tcbrt_SOURCES = tcbrt.c
tcbrt_OBJECTS =  tcbrt.$(OBJEXT)
tcbrt_LDADD = $(LDADD)
tcbrt_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tcbrt_LDFLAGS = 
tzeta_SOURCES = tzeta.c
tzeta_OBJECTS =  tzeta.$(OBJEXT)
tzeta_LDADD = $(LDADD)
tzeta_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tzeta_LDFLAGS = 
mpf_compat_SOURCES = mpf_compat.c
mpf_compat_OBJECTS =  mpf_compat.$(OBJEXT)
mpf_compat_LDADD = $(LDADD)
mpf_compat_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
mpf_compat_LDFLAGS = 
mpfr_compat_SOURCES = mpfr_compat.c
mpfr_compat_OBJECTS =  mpfr_compat.$(OBJEXT)
mpfr_compat_LDADD = $(LDADD)
mpfr_compat_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
mpfr_compat_LDFLAGS = 
reuse_SOURCES = reuse.c
reuse_OBJECTS =  reuse.$(OBJEXT)
reuse_LDADD = $(LDADD)
reuse_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
reuse_LDFLAGS = 
tsqr_SOURCES = tsqr.c
tsqr_OBJECTS =  tsqr.$(OBJEXT)
tsqr_LDADD = $(LDADD)
tsqr_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tsqr_LDFLAGS = 
tstrtofr_SOURCES = tstrtofr.c
tstrtofr_OBJECTS =  tstrtofr.$(OBJEXT)
tstrtofr_LDADD = $(LDADD)
tstrtofr_DEPENDENCIES =  libfrtests.a $(top_builddir)/libmpfr.a
tstrtofr_LDFLAGS = 
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libfrtests_a_SOURCES) $(EXTRA_libfrtests_a_SOURCES) tversion.c tinits.c tsgn.c tcheck.c tisnan.c texceptions.c tset_exp.c tset.c tabs.c tset_d.c tset_f.c tset_q.c tset_si.c tset_str.c tset_z.c tset_ld.c tset_sj.c tswap.c tcopysign.c tcmp.c tcmp2.c tcmpabs.c tcmp_d.c tcmp_ld.c tcomparisons.c teq.c tadd.c tsub.c tmul.c tdiv.c tsub1sp.c tadd1sp.c tadd_ui.c tsub_ui.c tcmp_ui.c tdiv_ui.c tmul_ui.c tsqrt_ui.c tui_div.c tui_sub.c tgmpop.c tsi_op.c tmul_2exp.c tfma.c tsum.c tdim.c tminmax.c tnext.c tfits.c tget_d.c tget_d_2exp.c tget_z.c tget_str.c tget_sj.c tout_str.c tinp_str.c toutimpl.c tcan_round.c tround_prec.c tsqrt.c tconst_log2.c tconst_pi.c tconst_euler.c trandom.c ttrunc.c trint.c tfrac.c texp.c texp2.c texpm1.c tlog.c tlog2.c tlog10.c tlog1p.c tpow.c tui_pow.c tpow3.c tcosh.c tsinh.c ttanh.c tacosh.c tasinh.c tatanh.c thyperbolic.c tasin.c tacos.c tcos.c tatan.c tsin.c ttan.c tsin_cos.c tagm.c thypot.c tfactorial.c tgamma.c terf.c tcbrt.c tzeta.c mpf_compat.c mpfr_compat.c reuse.c tsqr.c tstrtofr.c
OBJECTS = $(libfrtests_a_OBJECTS) tversion.$(OBJEXT) tinits.$(OBJEXT) tsgn.$(OBJEXT) tcheck.$(OBJEXT) tisnan.$(OBJEXT) texceptions.$(OBJEXT) tset_exp.$(OBJEXT) tset.$(OBJEXT) tabs.$(OBJEXT) tset_d.$(OBJEXT) tset_f.$(OBJEXT) tset_q.$(OBJEXT) tset_si.$(OBJEXT) tset_str.$(OBJEXT) tset_z.$(OBJEXT) tset_ld.$(OBJEXT) tset_sj.$(OBJEXT) tswap.$(OBJEXT) tcopysign.$(OBJEXT) tcmp.$(OBJEXT) tcmp2.$(OBJEXT) tcmpabs.$(OBJEXT) tcmp_d.$(OBJEXT) tcmp_ld.$(OBJEXT) tcomparisons.$(OBJEXT) teq.$(OBJEXT) tadd.$(OBJEXT) tsub.$(OBJEXT) tmul.$(OBJEXT) tdiv.$(OBJEXT) tsub1sp.$(OBJEXT) tadd1sp.$(OBJEXT) tadd_ui.$(OBJEXT) tsub_ui.$(OBJEXT) tcmp_ui.$(OBJEXT) tdiv_ui.$(OBJEXT) tmul_ui.$(OBJEXT) tsqrt_ui.$(OBJEXT) tui_div.$(OBJEXT) tui_sub.$(OBJEXT) tgmpop.$(OBJEXT) tsi_op.$(OBJEXT) tmul_2exp.$(OBJEXT) tfma.$(OBJEXT) tsum.$(OBJEXT) tdim.$(OBJEXT) tminmax.$(OBJEXT) tnext.$(OBJEXT) tfits.$(OBJEXT) tget_d.$(OBJEXT) tget_d_2exp.$(OBJEXT) tget_z.$(OBJEXT) tget_str.$(OBJEXT) tget_sj.$(OBJEXT) tout_str.$(OBJEXT) tinp_str.$(OBJEXT) toutimpl.$(OBJEXT) tcan_round.$(OBJEXT) tround_prec.$(OBJEXT) tsqrt.$(OBJEXT) tconst_log2.$(OBJEXT) tconst_pi.$(OBJEXT) tconst_euler.$(OBJEXT) trandom.$(OBJEXT) ttrunc.$(OBJEXT) trint.$(OBJEXT) tfrac.$(OBJEXT) texp.$(OBJEXT) texp2.$(OBJEXT) texpm1.$(OBJEXT) tlog.$(OBJEXT) tlog2.$(OBJEXT) tlog10.$(OBJEXT) tlog1p.$(OBJEXT) tpow.$(OBJEXT) tui_pow.$(OBJEXT) tpow3.$(OBJEXT) tcosh.$(OBJEXT) tsinh.$(OBJEXT) ttanh.$(OBJEXT) tacosh.$(OBJEXT) tasinh.$(OBJEXT) tatanh.$(OBJEXT) thyperbolic.$(OBJEXT) tasin.$(OBJEXT) tacos.$(OBJEXT) tcos.$(OBJEXT) tatan.$(OBJEXT) tsin.$(OBJEXT) ttan.$(OBJEXT) tsin_cos.$(OBJEXT) tagm.$(OBJEXT) thypot.$(OBJEXT) tfactorial.$(OBJEXT) tgamma.$(OBJEXT) terf.$(OBJEXT) tcbrt.$(OBJEXT) tzeta.$(OBJEXT) mpf_compat.$(OBJEXT) mpfr_compat.$(OBJEXT) reuse.$(OBJEXT) tsqr.$(OBJEXT) tstrtofr.$(OBJEXT)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .asm .c .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps tests/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-checkLIBRARIES:

clean-checkLIBRARIES:
	-test -z "$(check_LIBRARIES)" || rm -f $(check_LIBRARIES)

distclean-checkLIBRARIES:

maintainer-clean-checkLIBRARIES:

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

libfrtests.a: $(libfrtests_a_OBJECTS) $(libfrtests_a_DEPENDENCIES)
	-rm -f libfrtests.a
	$(AR) cru libfrtests.a $(libfrtests_a_OBJECTS) $(libfrtests_a_LIBADD)
	$(RANLIB) libfrtests.a

mostlyclean-checkPROGRAMS:

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

distclean-checkPROGRAMS:

maintainer-clean-checkPROGRAMS:

tversion: $(tversion_OBJECTS) $(tversion_DEPENDENCIES)
	@rm -f tversion
	$(LINK) $(tversion_LDFLAGS) $(tversion_OBJECTS) $(tversion_LDADD) $(LIBS)

tinits: $(tinits_OBJECTS) $(tinits_DEPENDENCIES)
	@rm -f tinits
	$(LINK) $(tinits_LDFLAGS) $(tinits_OBJECTS) $(tinits_LDADD) $(LIBS)

tsgn: $(tsgn_OBJECTS) $(tsgn_DEPENDENCIES)
	@rm -f tsgn
	$(LINK) $(tsgn_LDFLAGS) $(tsgn_OBJECTS) $(tsgn_LDADD) $(LIBS)

tcheck: $(tcheck_OBJECTS) $(tcheck_DEPENDENCIES)
	@rm -f tcheck
	$(LINK) $(tcheck_LDFLAGS) $(tcheck_OBJECTS) $(tcheck_LDADD) $(LIBS)

tisnan: $(tisnan_OBJECTS) $(tisnan_DEPENDENCIES)
	@rm -f tisnan
	$(LINK) $(tisnan_LDFLAGS) $(tisnan_OBJECTS) $(tisnan_LDADD) $(LIBS)

texceptions: $(texceptions_OBJECTS) $(texceptions_DEPENDENCIES)
	@rm -f texceptions
	$(LINK) $(texceptions_LDFLAGS) $(texceptions_OBJECTS) $(texceptions_LDADD) $(LIBS)

tset_exp: $(tset_exp_OBJECTS) $(tset_exp_DEPENDENCIES)
	@rm -f tset_exp
	$(LINK) $(tset_exp_LDFLAGS) $(tset_exp_OBJECTS) $(tset_exp_LDADD) $(LIBS)

tset: $(tset_OBJECTS) $(tset_DEPENDENCIES)
	@rm -f tset
	$(LINK) $(tset_LDFLAGS) $(tset_OBJECTS) $(tset_LDADD) $(LIBS)

tabs: $(tabs_OBJECTS) $(tabs_DEPENDENCIES)
	@rm -f tabs
	$(LINK) $(tabs_LDFLAGS) $(tabs_OBJECTS) $(tabs_LDADD) $(LIBS)

tset_d: $(tset_d_OBJECTS) $(tset_d_DEPENDENCIES)
	@rm -f tset_d
	$(LINK) $(tset_d_LDFLAGS) $(tset_d_OBJECTS) $(tset_d_LDADD) $(LIBS)

tset_f: $(tset_f_OBJECTS) $(tset_f_DEPENDENCIES)
	@rm -f tset_f
	$(LINK) $(tset_f_LDFLAGS) $(tset_f_OBJECTS) $(tset_f_LDADD) $(LIBS)

tset_q: $(tset_q_OBJECTS) $(tset_q_DEPENDENCIES)
	@rm -f tset_q
	$(LINK) $(tset_q_LDFLAGS) $(tset_q_OBJECTS) $(tset_q_LDADD) $(LIBS)

tset_si: $(tset_si_OBJECTS) $(tset_si_DEPENDENCIES)
	@rm -f tset_si
	$(LINK) $(tset_si_LDFLAGS) $(tset_si_OBJECTS) $(tset_si_LDADD) $(LIBS)

tset_str: $(tset_str_OBJECTS) $(tset_str_DEPENDENCIES)
	@rm -f tset_str
	$(LINK) $(tset_str_LDFLAGS) $(tset_str_OBJECTS) $(tset_str_LDADD) $(LIBS)

tset_z: $(tset_z_OBJECTS) $(tset_z_DEPENDENCIES)
	@rm -f tset_z
	$(LINK) $(tset_z_LDFLAGS) $(tset_z_OBJECTS) $(tset_z_LDADD) $(LIBS)

tset_ld: $(tset_ld_OBJECTS) $(tset_ld_DEPENDENCIES)
	@rm -f tset_ld
	$(LINK) $(tset_ld_LDFLAGS) $(tset_ld_OBJECTS) $(tset_ld_LDADD) $(LIBS)

tset_sj: $(tset_sj_OBJECTS) $(tset_sj_DEPENDENCIES)
	@rm -f tset_sj
	$(LINK) $(tset_sj_LDFLAGS) $(tset_sj_OBJECTS) $(tset_sj_LDADD) $(LIBS)

tswap: $(tswap_OBJECTS) $(tswap_DEPENDENCIES)
	@rm -f tswap
	$(LINK) $(tswap_LDFLAGS) $(tswap_OBJECTS) $(tswap_LDADD) $(LIBS)

tcopysign: $(tcopysign_OBJECTS) $(tcopysign_DEPENDENCIES)
	@rm -f tcopysign
	$(LINK) $(tcopysign_LDFLAGS) $(tcopysign_OBJECTS) $(tcopysign_LDADD) $(LIBS)

tcmp: $(tcmp_OBJECTS) $(tcmp_DEPENDENCIES)
	@rm -f tcmp
	$(LINK) $(tcmp_LDFLAGS) $(tcmp_OBJECTS) $(tcmp_LDADD) $(LIBS)

tcmp2: $(tcmp2_OBJECTS) $(tcmp2_DEPENDENCIES)
	@rm -f tcmp2
	$(LINK) $(tcmp2_LDFLAGS) $(tcmp2_OBJECTS) $(tcmp2_LDADD) $(LIBS)

tcmpabs: $(tcmpabs_OBJECTS) $(tcmpabs_DEPENDENCIES)
	@rm -f tcmpabs
	$(LINK) $(tcmpabs_LDFLAGS) $(tcmpabs_OBJECTS) $(tcmpabs_LDADD) $(LIBS)

tcmp_d: $(tcmp_d_OBJECTS) $(tcmp_d_DEPENDENCIES)
	@rm -f tcmp_d
	$(LINK) $(tcmp_d_LDFLAGS) $(tcmp_d_OBJECTS) $(tcmp_d_LDADD) $(LIBS)

tcmp_ld: $(tcmp_ld_OBJECTS) $(tcmp_ld_DEPENDENCIES)
	@rm -f tcmp_ld
	$(LINK) $(tcmp_ld_LDFLAGS) $(tcmp_ld_OBJECTS) $(tcmp_ld_LDADD) $(LIBS)

tcomparisons: $(tcomparisons_OBJECTS) $(tcomparisons_DEPENDENCIES)
	@rm -f tcomparisons
	$(LINK) $(tcomparisons_LDFLAGS) $(tcomparisons_OBJECTS) $(tcomparisons_LDADD) $(LIBS)

teq: $(teq_OBJECTS) $(teq_DEPENDENCIES)
	@rm -f teq
	$(LINK) $(teq_LDFLAGS) $(teq_OBJECTS) $(teq_LDADD) $(LIBS)

tadd: $(tadd_OBJECTS) $(tadd_DEPENDENCIES)
	@rm -f tadd
	$(LINK) $(tadd_LDFLAGS) $(tadd_OBJECTS) $(tadd_LDADD) $(LIBS)

tsub: $(tsub_OBJECTS) $(tsub_DEPENDENCIES)
	@rm -f tsub
	$(LINK) $(tsub_LDFLAGS) $(tsub_OBJECTS) $(tsub_LDADD) $(LIBS)

tmul: $(tmul_OBJECTS) $(tmul_DEPENDENCIES)
	@rm -f tmul
	$(LINK) $(tmul_LDFLAGS) $(tmul_OBJECTS) $(tmul_LDADD) $(LIBS)

tdiv: $(tdiv_OBJECTS) $(tdiv_DEPENDENCIES)
	@rm -f tdiv
	$(LINK) $(tdiv_LDFLAGS) $(tdiv_OBJECTS) $(tdiv_LDADD) $(LIBS)

tsub1sp: $(tsub1sp_OBJECTS) $(tsub1sp_DEPENDENCIES)
	@rm -f tsub1sp
	$(LINK) $(tsub1sp_LDFLAGS) $(tsub1sp_OBJECTS) $(tsub1sp_LDADD) $(LIBS)

tadd1sp: $(tadd1sp_OBJECTS) $(tadd1sp_DEPENDENCIES)
	@rm -f tadd1sp
	$(LINK) $(tadd1sp_LDFLAGS) $(tadd1sp_OBJECTS) $(tadd1sp_LDADD) $(LIBS)

tadd_ui: $(tadd_ui_OBJECTS) $(tadd_ui_DEPENDENCIES)
	@rm -f tadd_ui
	$(LINK) $(tadd_ui_LDFLAGS) $(tadd_ui_OBJECTS) $(tadd_ui_LDADD) $(LIBS)

tsub_ui: $(tsub_ui_OBJECTS) $(tsub_ui_DEPENDENCIES)
	@rm -f tsub_ui
	$(LINK) $(tsub_ui_LDFLAGS) $(tsub_ui_OBJECTS) $(tsub_ui_LDADD) $(LIBS)

tcmp_ui: $(tcmp_ui_OBJECTS) $(tcmp_ui_DEPENDENCIES)
	@rm -f tcmp_ui
	$(LINK) $(tcmp_ui_LDFLAGS) $(tcmp_ui_OBJECTS) $(tcmp_ui_LDADD) $(LIBS)

tdiv_ui: $(tdiv_ui_OBJECTS) $(tdiv_ui_DEPENDENCIES)
	@rm -f tdiv_ui
	$(LINK) $(tdiv_ui_LDFLAGS) $(tdiv_ui_OBJECTS) $(tdiv_ui_LDADD) $(LIBS)

tmul_ui: $(tmul_ui_OBJECTS) $(tmul_ui_DEPENDENCIES)
	@rm -f tmul_ui
	$(LINK) $(tmul_ui_LDFLAGS) $(tmul_ui_OBJECTS) $(tmul_ui_LDADD) $(LIBS)

tsqrt_ui: $(tsqrt_ui_OBJECTS) $(tsqrt_ui_DEPENDENCIES)
	@rm -f tsqrt_ui
	$(LINK) $(tsqrt_ui_LDFLAGS) $(tsqrt_ui_OBJECTS) $(tsqrt_ui_LDADD) $(LIBS)

tui_div: $(tui_div_OBJECTS) $(tui_div_DEPENDENCIES)
	@rm -f tui_div
	$(LINK) $(tui_div_LDFLAGS) $(tui_div_OBJECTS) $(tui_div_LDADD) $(LIBS)

tui_sub: $(tui_sub_OBJECTS) $(tui_sub_DEPENDENCIES)
	@rm -f tui_sub
	$(LINK) $(tui_sub_LDFLAGS) $(tui_sub_OBJECTS) $(tui_sub_LDADD) $(LIBS)

tgmpop: $(tgmpop_OBJECTS) $(tgmpop_DEPENDENCIES)
	@rm -f tgmpop
	$(LINK) $(tgmpop_LDFLAGS) $(tgmpop_OBJECTS) $(tgmpop_LDADD) $(LIBS)

tsi_op: $(tsi_op_OBJECTS) $(tsi_op_DEPENDENCIES)
	@rm -f tsi_op
	$(LINK) $(tsi_op_LDFLAGS) $(tsi_op_OBJECTS) $(tsi_op_LDADD) $(LIBS)

tmul_2exp: $(tmul_2exp_OBJECTS) $(tmul_2exp_DEPENDENCIES)
	@rm -f tmul_2exp
	$(LINK) $(tmul_2exp_LDFLAGS) $(tmul_2exp_OBJECTS) $(tmul_2exp_LDADD) $(LIBS)

tfma: $(tfma_OBJECTS) $(tfma_DEPENDENCIES)
	@rm -f tfma
	$(LINK) $(tfma_LDFLAGS) $(tfma_OBJECTS) $(tfma_LDADD) $(LIBS)

tsum: $(tsum_OBJECTS) $(tsum_DEPENDENCIES)
	@rm -f tsum
	$(LINK) $(tsum_LDFLAGS) $(tsum_OBJECTS) $(tsum_LDADD) $(LIBS)

tdim: $(tdim_OBJECTS) $(tdim_DEPENDENCIES)
	@rm -f tdim
	$(LINK) $(tdim_LDFLAGS) $(tdim_OBJECTS) $(tdim_LDADD) $(LIBS)

tminmax: $(tminmax_OBJECTS) $(tminmax_DEPENDENCIES)
	@rm -f tminmax
	$(LINK) $(tminmax_LDFLAGS) $(tminmax_OBJECTS) $(tminmax_LDADD) $(LIBS)

tnext: $(tnext_OBJECTS) $(tnext_DEPENDENCIES)
	@rm -f tnext
	$(LINK) $(tnext_LDFLAGS) $(tnext_OBJECTS) $(tnext_LDADD) $(LIBS)

tfits: $(tfits_OBJECTS) $(tfits_DEPENDENCIES)
	@rm -f tfits
	$(LINK) $(tfits_LDFLAGS) $(tfits_OBJECTS) $(tfits_LDADD) $(LIBS)

tget_d: $(tget_d_OBJECTS) $(tget_d_DEPENDENCIES)
	@rm -f tget_d
	$(LINK) $(tget_d_LDFLAGS) $(tget_d_OBJECTS) $(tget_d_LDADD) $(LIBS)

tget_d_2exp: $(tget_d_2exp_OBJECTS) $(tget_d_2exp_DEPENDENCIES)
	@rm -f tget_d_2exp
	$(LINK) $(tget_d_2exp_LDFLAGS) $(tget_d_2exp_OBJECTS) $(tget_d_2exp_LDADD) $(LIBS)

tget_z: $(tget_z_OBJECTS) $(tget_z_DEPENDENCIES)
	@rm -f tget_z
	$(LINK) $(tget_z_LDFLAGS) $(tget_z_OBJECTS) $(tget_z_LDADD) $(LIBS)

tget_str: $(tget_str_OBJECTS) $(tget_str_DEPENDENCIES)
	@rm -f tget_str
	$(LINK) $(tget_str_LDFLAGS) $(tget_str_OBJECTS) $(tget_str_LDADD) $(LIBS)

tget_sj: $(tget_sj_OBJECTS) $(tget_sj_DEPENDENCIES)
	@rm -f tget_sj
	$(LINK) $(tget_sj_LDFLAGS) $(tget_sj_OBJECTS) $(tget_sj_LDADD) $(LIBS)

tout_str: $(tout_str_OBJECTS) $(tout_str_DEPENDENCIES)
	@rm -f tout_str
	$(LINK) $(tout_str_LDFLAGS) $(tout_str_OBJECTS) $(tout_str_LDADD) $(LIBS)

tinp_str: $(tinp_str_OBJECTS) $(tinp_str_DEPENDENCIES)
	@rm -f tinp_str
	$(LINK) $(tinp_str_LDFLAGS) $(tinp_str_OBJECTS) $(tinp_str_LDADD) $(LIBS)

toutimpl: $(toutimpl_OBJECTS) $(toutimpl_DEPENDENCIES)
	@rm -f toutimpl
	$(LINK) $(toutimpl_LDFLAGS) $(toutimpl_OBJECTS) $(toutimpl_LDADD) $(LIBS)

tcan_round: $(tcan_round_OBJECTS) $(tcan_round_DEPENDENCIES)
	@rm -f tcan_round
	$(LINK) $(tcan_round_LDFLAGS) $(tcan_round_OBJECTS) $(tcan_round_LDADD) $(LIBS)

tround_prec: $(tround_prec_OBJECTS) $(tround_prec_DEPENDENCIES)
	@rm -f tround_prec
	$(LINK) $(tround_prec_LDFLAGS) $(tround_prec_OBJECTS) $(tround_prec_LDADD) $(LIBS)

tsqrt: $(tsqrt_OBJECTS) $(tsqrt_DEPENDENCIES)
	@rm -f tsqrt
	$(LINK) $(tsqrt_LDFLAGS) $(tsqrt_OBJECTS) $(tsqrt_LDADD) $(LIBS)

tconst_log2: $(tconst_log2_OBJECTS) $(tconst_log2_DEPENDENCIES)
	@rm -f tconst_log2
	$(LINK) $(tconst_log2_LDFLAGS) $(tconst_log2_OBJECTS) $(tconst_log2_LDADD) $(LIBS)

tconst_pi: $(tconst_pi_OBJECTS) $(tconst_pi_DEPENDENCIES)
	@rm -f tconst_pi
	$(LINK) $(tconst_pi_LDFLAGS) $(tconst_pi_OBJECTS) $(tconst_pi_LDADD) $(LIBS)

tconst_euler: $(tconst_euler_OBJECTS) $(tconst_euler_DEPENDENCIES)
	@rm -f tconst_euler
	$(LINK) $(tconst_euler_LDFLAGS) $(tconst_euler_OBJECTS) $(tconst_euler_LDADD) $(LIBS)

trandom: $(trandom_OBJECTS) $(trandom_DEPENDENCIES)
	@rm -f trandom
	$(LINK) $(trandom_LDFLAGS) $(trandom_OBJECTS) $(trandom_LDADD) $(LIBS)

ttrunc: $(ttrunc_OBJECTS) $(ttrunc_DEPENDENCIES)
	@rm -f ttrunc
	$(LINK) $(ttrunc_LDFLAGS) $(ttrunc_OBJECTS) $(ttrunc_LDADD) $(LIBS)

trint: $(trint_OBJECTS) $(trint_DEPENDENCIES)
	@rm -f trint
	$(LINK) $(trint_LDFLAGS) $(trint_OBJECTS) $(trint_LDADD) $(LIBS)

tfrac: $(tfrac_OBJECTS) $(tfrac_DEPENDENCIES)
	@rm -f tfrac
	$(LINK) $(tfrac_LDFLAGS) $(tfrac_OBJECTS) $(tfrac_LDADD) $(LIBS)

texp: $(texp_OBJECTS) $(texp_DEPENDENCIES)
	@rm -f texp
	$(LINK) $(texp_LDFLAGS) $(texp_OBJECTS) $(texp_LDADD) $(LIBS)

texp2: $(texp2_OBJECTS) $(texp2_DEPENDENCIES)
	@rm -f texp2
	$(LINK) $(texp2_LDFLAGS) $(texp2_OBJECTS) $(texp2_LDADD) $(LIBS)

texpm1: $(texpm1_OBJECTS) $(texpm1_DEPENDENCIES)
	@rm -f texpm1
	$(LINK) $(texpm1_LDFLAGS) $(texpm1_OBJECTS) $(texpm1_LDADD) $(LIBS)

tlog: $(tlog_OBJECTS) $(tlog_DEPENDENCIES)
	@rm -f tlog
	$(LINK) $(tlog_LDFLAGS) $(tlog_OBJECTS) $(tlog_LDADD) $(LIBS)

tlog2: $(tlog2_OBJECTS) $(tlog2_DEPENDENCIES)
	@rm -f tlog2
	$(LINK) $(tlog2_LDFLAGS) $(tlog2_OBJECTS) $(tlog2_LDADD) $(LIBS)

tlog10: $(tlog10_OBJECTS) $(tlog10_DEPENDENCIES)
	@rm -f tlog10
	$(LINK) $(tlog10_LDFLAGS) $(tlog10_OBJECTS) $(tlog10_LDADD) $(LIBS)

tlog1p: $(tlog1p_OBJECTS) $(tlog1p_DEPENDENCIES)
	@rm -f tlog1p
	$(LINK) $(tlog1p_LDFLAGS) $(tlog1p_OBJECTS) $(tlog1p_LDADD) $(LIBS)

tpow: $(tpow_OBJECTS) $(tpow_DEPENDENCIES)
	@rm -f tpow
	$(LINK) $(tpow_LDFLAGS) $(tpow_OBJECTS) $(tpow_LDADD) $(LIBS)

tui_pow: $(tui_pow_OBJECTS) $(tui_pow_DEPENDENCIES)
	@rm -f tui_pow
	$(LINK) $(tui_pow_LDFLAGS) $(tui_pow_OBJECTS) $(tui_pow_LDADD) $(LIBS)

tpow3: $(tpow3_OBJECTS) $(tpow3_DEPENDENCIES)
	@rm -f tpow3
	$(LINK) $(tpow3_LDFLAGS) $(tpow3_OBJECTS) $(tpow3_LDADD) $(LIBS)

tcosh: $(tcosh_OBJECTS) $(tcosh_DEPENDENCIES)
	@rm -f tcosh
	$(LINK) $(tcosh_LDFLAGS) $(tcosh_OBJECTS) $(tcosh_LDADD) $(LIBS)

tsinh: $(tsinh_OBJECTS) $(tsinh_DEPENDENCIES)
	@rm -f tsinh
	$(LINK) $(tsinh_LDFLAGS) $(tsinh_OBJECTS) $(tsinh_LDADD) $(LIBS)

ttanh: $(ttanh_OBJECTS) $(ttanh_DEPENDENCIES)
	@rm -f ttanh
	$(LINK) $(ttanh_LDFLAGS) $(ttanh_OBJECTS) $(ttanh_LDADD) $(LIBS)

tacosh: $(tacosh_OBJECTS) $(tacosh_DEPENDENCIES)
	@rm -f tacosh
	$(LINK) $(tacosh_LDFLAGS) $(tacosh_OBJECTS) $(tacosh_LDADD) $(LIBS)

tasinh: $(tasinh_OBJECTS) $(tasinh_DEPENDENCIES)
	@rm -f tasinh
	$(LINK) $(tasinh_LDFLAGS) $(tasinh_OBJECTS) $(tasinh_LDADD) $(LIBS)

tatanh: $(tatanh_OBJECTS) $(tatanh_DEPENDENCIES)
	@rm -f tatanh
	$(LINK) $(tatanh_LDFLAGS) $(tatanh_OBJECTS) $(tatanh_LDADD) $(LIBS)

thyperbolic: $(thyperbolic_OBJECTS) $(thyperbolic_DEPENDENCIES)
	@rm -f thyperbolic
	$(LINK) $(thyperbolic_LDFLAGS) $(thyperbolic_OBJECTS) $(thyperbolic_LDADD) $(LIBS)

tasin: $(tasin_OBJECTS) $(tasin_DEPENDENCIES)
	@rm -f tasin
	$(LINK) $(tasin_LDFLAGS) $(tasin_OBJECTS) $(tasin_LDADD) $(LIBS)

tacos: $(tacos_OBJECTS) $(tacos_DEPENDENCIES)
	@rm -f tacos
	$(LINK) $(tacos_LDFLAGS) $(tacos_OBJECTS) $(tacos_LDADD) $(LIBS)

tcos: $(tcos_OBJECTS) $(tcos_DEPENDENCIES)
	@rm -f tcos
	$(LINK) $(tcos_LDFLAGS) $(tcos_OBJECTS) $(tcos_LDADD) $(LIBS)

tatan: $(tatan_OBJECTS) $(tatan_DEPENDENCIES)
	@rm -f tatan
	$(LINK) $(tatan_LDFLAGS) $(tatan_OBJECTS) $(tatan_LDADD) $(LIBS)

tsin: $(tsin_OBJECTS) $(tsin_DEPENDENCIES)
	@rm -f tsin
	$(LINK) $(tsin_LDFLAGS) $(tsin_OBJECTS) $(tsin_LDADD) $(LIBS)

ttan: $(ttan_OBJECTS) $(ttan_DEPENDENCIES)
	@rm -f ttan
	$(LINK) $(ttan_LDFLAGS) $(ttan_OBJECTS) $(ttan_LDADD) $(LIBS)

tsin_cos: $(tsin_cos_OBJECTS) $(tsin_cos_DEPENDENCIES)
	@rm -f tsin_cos
	$(LINK) $(tsin_cos_LDFLAGS) $(tsin_cos_OBJECTS) $(tsin_cos_LDADD) $(LIBS)

tagm: $(tagm_OBJECTS) $(tagm_DEPENDENCIES)
	@rm -f tagm
	$(LINK) $(tagm_LDFLAGS) $(tagm_OBJECTS) $(tagm_LDADD) $(LIBS)

thypot: $(thypot_OBJECTS) $(thypot_DEPENDENCIES)
	@rm -f thypot
	$(LINK) $(thypot_LDFLAGS) $(thypot_OBJECTS) $(thypot_LDADD) $(LIBS)

tfactorial: $(tfactorial_OBJECTS) $(tfactorial_DEPENDENCIES)
	@rm -f tfactorial
	$(LINK) $(tfactorial_LDFLAGS) $(tfactorial_OBJECTS) $(tfactorial_LDADD) $(LIBS)

tgamma: $(tgamma_OBJECTS) $(tgamma_DEPENDENCIES)
	@rm -f tgamma
	$(LINK) $(tgamma_LDFLAGS) $(tgamma_OBJECTS) $(tgamma_LDADD) $(LIBS)

terf: $(terf_OBJECTS) $(terf_DEPENDENCIES)
	@rm -f terf
	$(LINK) $(terf_LDFLAGS) $(terf_OBJECTS) $(terf_LDADD) $(LIBS)

tcbrt: $(tcbrt_OBJECTS) $(tcbrt_DEPENDENCIES)
	@rm -f tcbrt
	$(LINK) $(tcbrt_LDFLAGS) $(tcbrt_OBJECTS) $(tcbrt_LDADD) $(LIBS)

tzeta: $(tzeta_OBJECTS) $(tzeta_DEPENDENCIES)
	@rm -f tzeta
	$(LINK) $(tzeta_LDFLAGS) $(tzeta_OBJECTS) $(tzeta_LDADD) $(LIBS)

mpf_compat: $(mpf_compat_OBJECTS) $(mpf_compat_DEPENDENCIES)
	@rm -f mpf_compat
	$(LINK) $(mpf_compat_LDFLAGS) $(mpf_compat_OBJECTS) $(mpf_compat_LDADD) $(LIBS)

mpfr_compat: $(mpfr_compat_OBJECTS) $(mpfr_compat_DEPENDENCIES)
	@rm -f mpfr_compat
	$(LINK) $(mpfr_compat_LDFLAGS) $(mpfr_compat_OBJECTS) $(mpfr_compat_LDADD) $(LIBS)

reuse: $(reuse_OBJECTS) $(reuse_DEPENDENCIES)
	@rm -f reuse
	$(LINK) $(reuse_LDFLAGS) $(reuse_OBJECTS) $(reuse_LDADD) $(LIBS)

tsqr: $(tsqr_OBJECTS) $(tsqr_DEPENDENCIES)
	@rm -f tsqr
	$(LINK) $(tsqr_LDFLAGS) $(tsqr_OBJECTS) $(tsqr_LDADD) $(LIBS)

tstrtofr: $(tstrtofr_OBJECTS) $(tstrtofr_DEPENDENCIES)
	@rm -f tstrtofr
	$(LINK) $(tstrtofr_LDFLAGS) $(tstrtofr_OBJECTS) $(tstrtofr_LDADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = tests

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

check-TESTS: $(TESTS)
	@failed=0; all=0; \
	srcdir=$(srcdir); export srcdir; \
	for tst in $(TESTS); do \
	  if test -f $$tst; then dir=.; \
	  else dir="$(srcdir)"; fi; \
	  if $(TESTS_ENVIRONMENT) $$dir/$$tst; then \
	    all=`expr $$all + 1`; \
	    echo "PASS: $$tst"; \
	  elif test $$? -ne 77; then \
	    all=`expr $$all + 1`; \
	    failed=`expr $$failed + 1`; \
	    echo "FAIL: $$tst"; \
	  fi; \
	done; \
	if test "$$failed" -eq 0; then \
	  banner="All $$all tests passed"; \
	else \
	  banner="$$failed of $$all tests failed"; \
	fi; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"; \
	test "$$failed" -eq 0
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-checkLIBRARIES mostlyclean-compile \
		mostlyclean-checkPROGRAMS mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-checkLIBRARIES clean-compile clean-checkPROGRAMS \
		clean-tags clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-checkLIBRARIES distclean-compile \
		distclean-checkPROGRAMS distclean-tags \
		distclean-generic clean-am

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-checkLIBRARIES \
		maintainer-clean-compile maintainer-clean-checkPROGRAMS \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-checkLIBRARIES distclean-checkLIBRARIES \
clean-checkLIBRARIES maintainer-clean-checkLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-checkPROGRAMS \
distclean-checkPROGRAMS clean-checkPROGRAMS \
maintainer-clean-checkPROGRAMS tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir check-TESTS info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


$(top_builddir)/libmpfr.a:
	cd $(top_builddir); make libmpfr.a
.asm.o:
	grep -v '^#' `test -f '$<' || echo '$(srcdir)/'`$< >tmp-$*.s
	$(COMPILE) -c tmp-$*.s -o $@
	rm -f tmp-$*.s
.asm.obj:
	grep -v '^#' `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<' >tmp-$*.s
	$(COMPILE) -c tmp-$*.s -o $@
	rm -f tmp-$*.s

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
