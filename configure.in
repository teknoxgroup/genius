AC_INIT(src/calc.c)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(genius,0.2.1)
AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)

dnl Let the user disable GNOME even if it can be found
AC_ARG_ENABLE(gnome,
	      [  --disable-gnome         Do not try to use GNOME ],
	      enable_gnome="$enableval",)

dnl If GNOME is found, run the script in square brackets.
if test x$enable_gnome != xno ; then
  GNOME_INIT_HOOK([have_gnome=yes])
fi
AM_CONDITIONAL(HAVE_GNOME, test x$have_gnome = xyes)

GNOME_GENIUS=gnome-genius
if test x$have_gnome != xyes ; then
  AC_MSG_WARN([*** The gnome version will not be built ***])
  GNOME_GENIUS=
fi
AC_SUBST(GNOME_GENIUS)

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_PROG_YACC
AM_PROG_LEX
AC_ARG_PROGRAM
AM_PROG_LIBTOOL
AM_PATH_GLIB

## this should come after `AC_PROG_CC'
if test x$have_gnome != xno ; then
  GNOME_X_CHECKS
fi


GMP_LIB=""
AC_CHECK_LIB(gmp, mpz_init_set,[GMP_LIB=-lgmp], [
	AC_CHECK_LIB(gmp2, mpz_init_set_d,[GMP_LIB=-lgmp2
		AC_DEFINE(HAVE_GMP2_INCLUDE_DIR)],
		AC_MSG_ERROR(GMP Library not found))])
AC_SUBST(GMP_LIB)

READLINE_LIB=""
READLINE_SUPPORT=""
AC_CHECK_LIB(readline, readline,[READLINE_LIB=-lreadline
				 READLINE_SUPPORT=-DWITH_READLINE_SUPPORT])
AC_SUBST(READLINE_LIB)
AC_SUBST(READLINE_SUPPORT)

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

dnl ## internationalization support
ALL_LINGUAS="de es fr it ko cs no ga pt"
AM_GNU_GETTEXT
AC_LINK_FILES($nls_cv_header_libgt, $nls_cv_header_intl)

AC_OUTPUT([
Makefile
src/Makefile
intl/Makefile
po/Makefile.in
macros/Makefile
stamp.h],[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])

